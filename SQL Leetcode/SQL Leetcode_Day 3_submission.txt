615: 
select	pay_month, department_id, case when dept_avg > comp_avg then 'higher' when dept_avg < comp_avg then 'lower' else 'same' end comparison
from (
  select date_format(b.pay_date, '%Y-%m') pay_month, a.department_id, avg(b.amount) dept_avg, d.comp_avg
  from employee a, salary b,(
     select date_format(c.pay_date, '%Y-%m') pay_month, avg(c.amount) comp_avg 
     from salary c group by date_format(c.pay_date, '%Y-%m')) d where a.employee_id = b.employee_id and date_format(b.pay_date, '%Y-%m') = d.pay_month
     group by date_format(b.pay_date, '%Y-%m'), department_id, d.comp_avg) final;

602.
select a.requester_id id, 
 (select count(*) from request_accepted
  where accepter_id = a.requester_id or requester_id = a.requester_id) subquery	
 from request_accepted a order by num desc 
 limit 1;

608.
Write a query to print the node id and the type of the node.

Schema:
create table tree (id int, p_id int);
insert into tree values (1,null), (2,1), (3,1), (4,2), (5,2);

SELECT
    id AS `Id`,
    CASE
        WHEN tree.id = (SELECT atree.id FROM tree atree WHERE atree.p_id IS NULL)
          THEN 'Root'
        WHEN tree.id IN (SELECT atree.p_id FROM tree atree)
          THEN 'Inner'
        ELSE 'Leaf'
    END AS Type
FROM
    tree
ORDER BY `Id`
;